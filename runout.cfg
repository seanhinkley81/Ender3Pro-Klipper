[filament_switch_sensor runout]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
pause_on_runout: FALSE
runout_gcode:
#{action_respond_info("RUNOUT: Filament runout")}
 M600
 PAUSE
insert_gcode: {action_respond_info("RUNOUT: Filament inserted")}
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
pause_delay: 0.5
##    XYE mcu E0DET
switch_pin: ^!PA4



#####################################################################
# 	Macro
#####################################################################
[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}
  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"

[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}
  
[gcode_macro M600]
gcode:
    {% set X = params.X|default(25)|float %}
    {% set Y = params.Y|default(25)|float %}
    {% set Z = params.Z|default(10)|float %}
        SAVE_GCODE_STATE NAME=M600_state
        SET_IDLE_TIMEOUT TIMEOUT=3600
        PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-15 F1000
        RESTORE_GCODE_STATE NAME=M600_state
